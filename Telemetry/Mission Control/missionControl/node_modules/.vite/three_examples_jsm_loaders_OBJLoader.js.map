{
  "version": 3,
  "sources": ["../three/examples/jsm/loaders/OBJLoader.js"],
  "sourcesContent": ["import {\r\n\tBufferGeometry,\r\n\tFileLoader,\r\n\tFloat32BufferAttribute,\r\n\tGroup,\r\n\tLineBasicMaterial,\r\n\tLineSegments,\r\n\tLoader,\r\n\tMaterial,\r\n\tMesh,\r\n\tMeshPhongMaterial,\r\n\tPoints,\r\n\tPointsMaterial,\r\n\tVector3\r\n} from 'three';\r\n\r\n// o object_name | g group_name\r\nconst _object_pattern = /^[og]\\s*(.+)?/;\r\n// mtllib file_reference\r\nconst _material_library_pattern = /^mtllib /;\r\n// usemtl material_name\r\nconst _material_use_pattern = /^usemtl /;\r\n// usemap map_name\r\nconst _map_use_pattern = /^usemap /;\r\n\r\nconst _vA = new Vector3();\r\nconst _vB = new Vector3();\r\nconst _vC = new Vector3();\r\n\r\nconst _ab = new Vector3();\r\nconst _cb = new Vector3();\r\n\r\nfunction ParserState() {\r\n\r\n\tconst state = {\r\n\t\tobjects: [],\r\n\t\tobject: {},\r\n\r\n\t\tvertices: [],\r\n\t\tnormals: [],\r\n\t\tcolors: [],\r\n\t\tuvs: [],\r\n\r\n\t\tmaterials: {},\r\n\t\tmaterialLibraries: [],\r\n\r\n\t\tstartObject: function ( name, fromDeclaration ) {\r\n\r\n\t\t\t// If the current object (initial from reset) is not from a g/o declaration in the parsed\r\n\t\t\t// file. We need to use it for the first parsed g/o to keep things in sync.\r\n\t\t\tif ( this.object && this.object.fromDeclaration === false ) {\r\n\r\n\t\t\t\tthis.object.name = name;\r\n\t\t\t\tthis.object.fromDeclaration = ( fromDeclaration !== false );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tconst previousMaterial = ( this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined );\r\n\r\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\r\n\r\n\t\t\t\tthis.object._finalize( true );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.object = {\r\n\t\t\t\tname: name || '',\r\n\t\t\t\tfromDeclaration: ( fromDeclaration !== false ),\r\n\r\n\t\t\t\tgeometry: {\r\n\t\t\t\t\tvertices: [],\r\n\t\t\t\t\tnormals: [],\r\n\t\t\t\t\tcolors: [],\r\n\t\t\t\t\tuvs: [],\r\n\t\t\t\t\thasUVIndices: false\r\n\t\t\t\t},\r\n\t\t\t\tmaterials: [],\r\n\t\t\t\tsmooth: true,\r\n\r\n\t\t\t\tstartMaterial: function ( name, libraries ) {\r\n\r\n\t\t\t\t\tconst previous = this._finalize( false );\r\n\r\n\t\t\t\t\t// New usemtl declaration overwrites an inherited material, except if faces were declared\r\n\t\t\t\t\t// after the material, then it must be preserved for proper MultiMaterial continuation.\r\n\t\t\t\t\tif ( previous && ( previous.inherited || previous.groupCount <= 0 ) ) {\r\n\r\n\t\t\t\t\t\tthis.materials.splice( previous.index, 1 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tconst material = {\r\n\t\t\t\t\t\tindex: this.materials.length,\r\n\t\t\t\t\t\tname: name || '',\r\n\t\t\t\t\t\tmtllib: ( Array.isArray( libraries ) && libraries.length > 0 ? libraries[ libraries.length - 1 ] : '' ),\r\n\t\t\t\t\t\tsmooth: ( previous !== undefined ? previous.smooth : this.smooth ),\r\n\t\t\t\t\t\tgroupStart: ( previous !== undefined ? previous.groupEnd : 0 ),\r\n\t\t\t\t\t\tgroupEnd: - 1,\r\n\t\t\t\t\t\tgroupCount: - 1,\r\n\t\t\t\t\t\tinherited: false,\r\n\r\n\t\t\t\t\t\tclone: function ( index ) {\r\n\r\n\t\t\t\t\t\t\tconst cloned = {\r\n\t\t\t\t\t\t\t\tindex: ( typeof index === 'number' ? index : this.index ),\r\n\t\t\t\t\t\t\t\tname: this.name,\r\n\t\t\t\t\t\t\t\tmtllib: this.mtllib,\r\n\t\t\t\t\t\t\t\tsmooth: this.smooth,\r\n\t\t\t\t\t\t\t\tgroupStart: 0,\r\n\t\t\t\t\t\t\t\tgroupEnd: - 1,\r\n\t\t\t\t\t\t\t\tgroupCount: - 1,\r\n\t\t\t\t\t\t\t\tinherited: false\r\n\t\t\t\t\t\t\t};\r\n\t\t\t\t\t\t\tcloned.clone = this.clone.bind( cloned );\r\n\t\t\t\t\t\t\treturn cloned;\r\n\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tthis.materials.push( material );\r\n\r\n\t\t\t\t\treturn material;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\tcurrentMaterial: function () {\r\n\r\n\t\t\t\t\tif ( this.materials.length > 0 ) {\r\n\r\n\t\t\t\t\t\treturn this.materials[ this.materials.length - 1 ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn undefined;\r\n\r\n\t\t\t\t},\r\n\r\n\t\t\t\t_finalize: function ( end ) {\r\n\r\n\t\t\t\t\tconst lastMultiMaterial = this.currentMaterial();\r\n\t\t\t\t\tif ( lastMultiMaterial && lastMultiMaterial.groupEnd === - 1 ) {\r\n\r\n\t\t\t\t\t\tlastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\r\n\t\t\t\t\t\tlastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\r\n\t\t\t\t\t\tlastMultiMaterial.inherited = false;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Ignore objects tail materials if no face declarations followed them before a new o/g started.\r\n\t\t\t\t\tif ( end && this.materials.length > 1 ) {\r\n\r\n\t\t\t\t\t\tfor ( let mi = this.materials.length - 1; mi >= 0; mi -- ) {\r\n\r\n\t\t\t\t\t\t\tif ( this.materials[ mi ].groupCount <= 0 ) {\r\n\r\n\t\t\t\t\t\t\t\tthis.materials.splice( mi, 1 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t// Guarantee at least one empty material, this makes the creation later more straight forward.\r\n\t\t\t\t\tif ( end && this.materials.length === 0 ) {\r\n\r\n\t\t\t\t\t\tthis.materials.push( {\r\n\t\t\t\t\t\t\tname: '',\r\n\t\t\t\t\t\t\tsmooth: this.smooth\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\treturn lastMultiMaterial;\r\n\r\n\t\t\t\t}\r\n\t\t\t};\r\n\r\n\t\t\t// Inherit previous objects material.\r\n\t\t\t// Spec tells us that a declared material must be set to all objects until a new material is declared.\r\n\t\t\t// If a usemtl declaration is encountered while this new object is being parsed, it will\r\n\t\t\t// overwrite the inherited material. Exception being that there was already face declarations\r\n\t\t\t// to the inherited material, then it will be preserved for proper MultiMaterial continuation.\r\n\r\n\t\t\tif ( previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function' ) {\r\n\r\n\t\t\t\tconst declared = previousMaterial.clone( 0 );\r\n\t\t\t\tdeclared.inherited = true;\r\n\t\t\t\tthis.object.materials.push( declared );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.objects.push( this.object );\r\n\r\n\t\t},\r\n\r\n\t\tfinalize: function () {\r\n\r\n\t\t\tif ( this.object && typeof this.object._finalize === 'function' ) {\r\n\r\n\t\t\t\tthis.object._finalize( true );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tparseVertexIndex: function ( value, len ) {\r\n\r\n\t\t\tconst index = parseInt( value, 10 );\r\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\r\n\r\n\t\t},\r\n\r\n\t\tparseNormalIndex: function ( value, len ) {\r\n\r\n\t\t\tconst index = parseInt( value, 10 );\r\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 3 ) * 3;\r\n\r\n\t\t},\r\n\r\n\t\tparseUVIndex: function ( value, len ) {\r\n\r\n\t\t\tconst index = parseInt( value, 10 );\r\n\t\t\treturn ( index >= 0 ? index - 1 : index + len / 2 ) * 2;\r\n\r\n\t\t},\r\n\r\n\t\taddVertex: function ( a, b, c ) {\r\n\r\n\t\t\tconst src = this.vertices;\r\n\t\t\tconst dst = this.object.geometry.vertices;\r\n\r\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\r\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\r\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddVertexPoint: function ( a ) {\r\n\r\n\t\t\tconst src = this.vertices;\r\n\t\t\tconst dst = this.object.geometry.vertices;\r\n\r\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddVertexLine: function ( a ) {\r\n\r\n\t\t\tconst src = this.vertices;\r\n\t\t\tconst dst = this.object.geometry.vertices;\r\n\r\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddNormal: function ( a, b, c ) {\r\n\r\n\t\t\tconst src = this.normals;\r\n\t\t\tconst dst = this.object.geometry.normals;\r\n\r\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\r\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\r\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddFaceNormal: function ( a, b, c ) {\r\n\r\n\t\t\tconst src = this.vertices;\r\n\t\t\tconst dst = this.object.geometry.normals;\r\n\r\n\t\t\t_vA.fromArray( src, a );\r\n\t\t\t_vB.fromArray( src, b );\r\n\t\t\t_vC.fromArray( src, c );\r\n\r\n\t\t\t_cb.subVectors( _vC, _vB );\r\n\t\t\t_ab.subVectors( _vA, _vB );\r\n\t\t\t_cb.cross( _ab );\r\n\r\n\t\t\t_cb.normalize();\r\n\r\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\r\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\r\n\t\t\tdst.push( _cb.x, _cb.y, _cb.z );\r\n\r\n\t\t},\r\n\r\n\t\taddColor: function ( a, b, c ) {\r\n\r\n\t\t\tconst src = this.colors;\r\n\t\t\tconst dst = this.object.geometry.colors;\r\n\r\n\t\t\tif ( src[ a ] !== undefined ) dst.push( src[ a + 0 ], src[ a + 1 ], src[ a + 2 ] );\r\n\t\t\tif ( src[ b ] !== undefined ) dst.push( src[ b + 0 ], src[ b + 1 ], src[ b + 2 ] );\r\n\t\t\tif ( src[ c ] !== undefined ) dst.push( src[ c + 0 ], src[ c + 1 ], src[ c + 2 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddUV: function ( a, b, c ) {\r\n\r\n\t\t\tconst src = this.uvs;\r\n\t\t\tconst dst = this.object.geometry.uvs;\r\n\r\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\r\n\t\t\tdst.push( src[ b + 0 ], src[ b + 1 ] );\r\n\t\t\tdst.push( src[ c + 0 ], src[ c + 1 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddDefaultUV: function () {\r\n\r\n\t\t\tconst dst = this.object.geometry.uvs;\r\n\r\n\t\t\tdst.push( 0, 0 );\r\n\t\t\tdst.push( 0, 0 );\r\n\t\t\tdst.push( 0, 0 );\r\n\r\n\t\t},\r\n\r\n\t\taddUVLine: function ( a ) {\r\n\r\n\t\t\tconst src = this.uvs;\r\n\t\t\tconst dst = this.object.geometry.uvs;\r\n\r\n\t\t\tdst.push( src[ a + 0 ], src[ a + 1 ] );\r\n\r\n\t\t},\r\n\r\n\t\taddFace: function ( a, b, c, ua, ub, uc, na, nb, nc ) {\r\n\r\n\t\t\tconst vLen = this.vertices.length;\r\n\r\n\t\t\tlet ia = this.parseVertexIndex( a, vLen );\r\n\t\t\tlet ib = this.parseVertexIndex( b, vLen );\r\n\t\t\tlet ic = this.parseVertexIndex( c, vLen );\r\n\r\n\t\t\tthis.addVertex( ia, ib, ic );\r\n\t\t\tthis.addColor( ia, ib, ic );\r\n\r\n\t\t\t// normals\r\n\r\n\t\t\tif ( na !== undefined && na !== '' ) {\r\n\r\n\t\t\t\tconst nLen = this.normals.length;\r\n\r\n\t\t\t\tia = this.parseNormalIndex( na, nLen );\r\n\t\t\t\tib = this.parseNormalIndex( nb, nLen );\r\n\t\t\t\tic = this.parseNormalIndex( nc, nLen );\r\n\r\n\t\t\t\tthis.addNormal( ia, ib, ic );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.addFaceNormal( ia, ib, ic );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// uvs\r\n\r\n\t\t\tif ( ua !== undefined && ua !== '' ) {\r\n\r\n\t\t\t\tconst uvLen = this.uvs.length;\r\n\r\n\t\t\t\tia = this.parseUVIndex( ua, uvLen );\r\n\t\t\t\tib = this.parseUVIndex( ub, uvLen );\r\n\t\t\t\tic = this.parseUVIndex( uc, uvLen );\r\n\r\n\t\t\t\tthis.addUV( ia, ib, ic );\r\n\r\n\t\t\t\tthis.object.geometry.hasUVIndices = true;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// add placeholder values (for inconsistent face definitions)\r\n\r\n\t\t\t\tthis.addDefaultUV();\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\taddPointGeometry: function ( vertices ) {\r\n\r\n\t\t\tthis.object.geometry.type = 'Points';\r\n\r\n\t\t\tconst vLen = this.vertices.length;\r\n\r\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\r\n\r\n\t\t\t\tconst index = this.parseVertexIndex( vertices[ vi ], vLen );\r\n\r\n\t\t\t\tthis.addVertexPoint( index );\r\n\t\t\t\tthis.addColor( index );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\taddLineGeometry: function ( vertices, uvs ) {\r\n\r\n\t\t\tthis.object.geometry.type = 'Line';\r\n\r\n\t\t\tconst vLen = this.vertices.length;\r\n\t\t\tconst uvLen = this.uvs.length;\r\n\r\n\t\t\tfor ( let vi = 0, l = vertices.length; vi < l; vi ++ ) {\r\n\r\n\t\t\t\tthis.addVertexLine( this.parseVertexIndex( vertices[ vi ], vLen ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( let uvi = 0, l = uvs.length; uvi < l; uvi ++ ) {\r\n\r\n\t\t\t\tthis.addUVLine( this.parseUVIndex( uvs[ uvi ], uvLen ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tstate.startObject( '', false );\r\n\r\n\treturn state;\r\n\r\n}\r\n\r\n//\r\n\r\nclass OBJLoader extends Loader {\r\n\r\n\tconstructor( manager ) {\r\n\r\n\t\tsuper( manager );\r\n\r\n\t\tthis.materials = null;\r\n\r\n\t}\r\n\r\n\tload( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tconst scope = this;\r\n\r\n\t\tconst loader = new FileLoader( this.manager );\r\n\t\tloader.setPath( this.path );\r\n\t\tloader.setRequestHeader( this.requestHeader );\r\n\t\tloader.setWithCredentials( this.withCredentials );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\ttry {\r\n\r\n\t\t\t\tonLoad( scope.parse( text ) );\r\n\r\n\t\t\t} catch ( e ) {\r\n\r\n\t\t\t\tif ( onError ) {\r\n\r\n\t\t\t\t\tonError( e );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tconsole.error( e );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscope.manager.itemError( url );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t}\r\n\r\n\tsetMaterials( materials ) {\r\n\r\n\t\tthis.materials = materials;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n\tparse( text ) {\r\n\r\n\t\tconst state = new ParserState();\r\n\r\n\t\tif ( text.indexOf( '\\r\\n' ) !== - 1 ) {\r\n\r\n\t\t\t// This is faster than String.split with regex that splits on both\r\n\t\t\ttext = text.replace( /\\r\\n/g, '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( text.indexOf( '\\\\\\n' ) !== - 1 ) {\r\n\r\n\t\t\t// join lines separated by a line continuation character (\\)\r\n\t\t\ttext = text.replace( /\\\\\\n/g, '' );\r\n\r\n\t\t}\r\n\r\n\t\tconst lines = text.split( '\\n' );\r\n\t\tlet line = '', lineFirstChar = '';\r\n\t\tlet lineLength = 0;\r\n\t\tlet result = [];\r\n\r\n\t\t// Faster to just trim left side of the line. Use if available.\r\n\t\tconst trimLeft = ( typeof ''.trimLeft === 'function' );\r\n\r\n\t\tfor ( let i = 0, l = lines.length; i < l; i ++ ) {\r\n\r\n\t\t\tline = lines[ i ];\r\n\r\n\t\t\tline = trimLeft ? line.trimLeft() : line.trim();\r\n\r\n\t\t\tlineLength = line.length;\r\n\r\n\t\t\tif ( lineLength === 0 ) continue;\r\n\r\n\t\t\tlineFirstChar = line.charAt( 0 );\r\n\r\n\t\t\t// @todo invoke passed in handler if any\r\n\t\t\tif ( lineFirstChar === '#' ) continue;\r\n\r\n\t\t\tif ( lineFirstChar === 'v' ) {\r\n\r\n\t\t\t\tconst data = line.split( /\\s+/ );\r\n\r\n\t\t\t\tswitch ( data[ 0 ] ) {\r\n\r\n\t\t\t\t\tcase 'v':\r\n\t\t\t\t\t\tstate.vertices.push(\r\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\r\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\r\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tif ( data.length >= 7 ) {\r\n\r\n\t\t\t\t\t\t\tstate.colors.push(\r\n\t\t\t\t\t\t\t\tparseFloat( data[ 4 ] ),\r\n\t\t\t\t\t\t\t\tparseFloat( data[ 5 ] ),\r\n\t\t\t\t\t\t\t\tparseFloat( data[ 6 ] )\r\n\r\n\t\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// if no colors are defined, add placeholders so color and vertex indices match\r\n\r\n\t\t\t\t\t\t\tstate.colors.push( undefined, undefined, undefined );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'vn':\r\n\t\t\t\t\t\tstate.normals.push(\r\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\r\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] ),\r\n\t\t\t\t\t\t\tparseFloat( data[ 3 ] )\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbreak;\r\n\t\t\t\t\tcase 'vt':\r\n\t\t\t\t\t\tstate.uvs.push(\r\n\t\t\t\t\t\t\tparseFloat( data[ 1 ] ),\r\n\t\t\t\t\t\t\tparseFloat( data[ 2 ] )\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( lineFirstChar === 'f' ) {\r\n\r\n\t\t\t\tconst lineData = line.substr( 1 ).trim();\r\n\t\t\t\tconst vertexData = lineData.split( /\\s+/ );\r\n\t\t\t\tconst faceVertices = [];\r\n\r\n\t\t\t\t// Parse the face vertex data into an easy to work with format\r\n\r\n\t\t\t\tfor ( let j = 0, jl = vertexData.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tconst vertex = vertexData[ j ];\r\n\r\n\t\t\t\t\tif ( vertex.length > 0 ) {\r\n\r\n\t\t\t\t\t\tconst vertexParts = vertex.split( '/' );\r\n\t\t\t\t\t\tfaceVertices.push( vertexParts );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Draw an edge between the first vertex and all subsequent vertices to form an n-gon\r\n\r\n\t\t\t\tconst v1 = faceVertices[ 0 ];\r\n\r\n\t\t\t\tfor ( let j = 1, jl = faceVertices.length - 1; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tconst v2 = faceVertices[ j ];\r\n\t\t\t\t\tconst v3 = faceVertices[ j + 1 ];\r\n\r\n\t\t\t\t\tstate.addFace(\r\n\t\t\t\t\t\tv1[ 0 ], v2[ 0 ], v3[ 0 ],\r\n\t\t\t\t\t\tv1[ 1 ], v2[ 1 ], v3[ 1 ],\r\n\t\t\t\t\t\tv1[ 2 ], v2[ 2 ], v3[ 2 ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( lineFirstChar === 'l' ) {\r\n\r\n\t\t\t\tconst lineParts = line.substring( 1 ).trim().split( ' ' );\r\n\t\t\t\tlet lineVertices = [];\r\n\t\t\t\tconst lineUVs = [];\r\n\r\n\t\t\t\tif ( line.indexOf( '/' ) === - 1 ) {\r\n\r\n\t\t\t\t\tlineVertices = lineParts;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( let li = 0, llen = lineParts.length; li < llen; li ++ ) {\r\n\r\n\t\t\t\t\t\tconst parts = lineParts[ li ].split( '/' );\r\n\r\n\t\t\t\t\t\tif ( parts[ 0 ] !== '' ) lineVertices.push( parts[ 0 ] );\r\n\t\t\t\t\t\tif ( parts[ 1 ] !== '' ) lineUVs.push( parts[ 1 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tstate.addLineGeometry( lineVertices, lineUVs );\r\n\r\n\t\t\t} else if ( lineFirstChar === 'p' ) {\r\n\r\n\t\t\t\tconst lineData = line.substr( 1 ).trim();\r\n\t\t\t\tconst pointData = lineData.split( ' ' );\r\n\r\n\t\t\t\tstate.addPointGeometry( pointData );\r\n\r\n\t\t\t} else if ( ( result = _object_pattern.exec( line ) ) !== null ) {\r\n\r\n\t\t\t\t// o object_name\r\n\t\t\t\t// or\r\n\t\t\t\t// g group_name\r\n\r\n\t\t\t\t// WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\r\n\t\t\t\t// let name = result[ 0 ].substr( 1 ).trim();\r\n\t\t\t\tconst name = ( ' ' + result[ 0 ].substr( 1 ).trim() ).substr( 1 );\r\n\r\n\t\t\t\tstate.startObject( name );\r\n\r\n\t\t\t} else if ( _material_use_pattern.test( line ) ) {\r\n\r\n\t\t\t\t// material\r\n\r\n\t\t\t\tstate.object.startMaterial( line.substring( 7 ).trim(), state.materialLibraries );\r\n\r\n\t\t\t} else if ( _material_library_pattern.test( line ) ) {\r\n\r\n\t\t\t\t// mtl file\r\n\r\n\t\t\t\tstate.materialLibraries.push( line.substring( 7 ).trim() );\r\n\r\n\t\t\t} else if ( _map_use_pattern.test( line ) ) {\r\n\r\n\t\t\t\t// the line is parsed but ignored since the loader assumes textures are defined MTL files\r\n\t\t\t\t// (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\r\n\r\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.' );\r\n\r\n\t\t\t} else if ( lineFirstChar === 's' ) {\r\n\r\n\t\t\t\tresult = line.split( ' ' );\r\n\r\n\t\t\t\t// smooth shading\r\n\r\n\t\t\t\t// @todo Handle files that have varying smooth values for a set of faces inside one geometry,\r\n\t\t\t\t// but does not define a usemtl for each face set.\r\n\t\t\t\t// This should be detected and a dummy material created (later MultiMaterial and geometry groups).\r\n\t\t\t\t// This requires some care to not create extra material on each smooth value for \"normal\" obj files.\r\n\t\t\t\t// where explicit usemtl defines geometry groups.\r\n\t\t\t\t// Example asset: examples/models/obj/cerberus/Cerberus.obj\r\n\r\n\t\t\t\t/*\r\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\r\n\t\t\t\t\t *\r\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\r\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\r\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\r\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\r\n\t\t\t\t\t * than 0.\"\r\n\t\t\t\t\t */\r\n\t\t\t\tif ( result.length > 1 ) {\r\n\r\n\t\t\t\t\tconst value = result[ 1 ].trim().toLowerCase();\r\n\t\t\t\t\tstate.object.smooth = ( value !== '0' && value !== 'off' );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// ZBrush can produce \"s\" lines #11707\r\n\t\t\t\t\tstate.object.smooth = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst material = state.object.currentMaterial();\r\n\t\t\t\tif ( material ) material.smooth = state.object.smooth;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Handle null terminated files without exception\r\n\t\t\t\tif ( line === '\\0' ) continue;\r\n\r\n\t\t\t\tconsole.warn( 'THREE.OBJLoader: Unexpected line: \"' + line + '\"' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.finalize();\r\n\r\n\t\tconst container = new Group();\r\n\t\tcontainer.materialLibraries = [].concat( state.materialLibraries );\r\n\r\n\t\tconst hasPrimitives = ! ( state.objects.length === 1 && state.objects[ 0 ].geometry.vertices.length === 0 );\r\n\r\n\t\tif ( hasPrimitives === true ) {\r\n\r\n\t\t\tfor ( let i = 0, l = state.objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tconst object = state.objects[ i ];\r\n\t\t\t\tconst geometry = object.geometry;\r\n\t\t\t\tconst materials = object.materials;\r\n\t\t\t\tconst isLine = ( geometry.type === 'Line' );\r\n\t\t\t\tconst isPoints = ( geometry.type === 'Points' );\r\n\t\t\t\tlet hasVertexColors = false;\r\n\r\n\t\t\t\t// Skip o/g line declarations that did not follow with any faces\r\n\t\t\t\tif ( geometry.vertices.length === 0 ) continue;\r\n\r\n\t\t\t\tconst buffergeometry = new BufferGeometry();\r\n\r\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( geometry.vertices, 3 ) );\r\n\r\n\t\t\t\tif ( geometry.normals.length > 0 ) {\r\n\r\n\t\t\t\t\tbuffergeometry.setAttribute( 'normal', new Float32BufferAttribute( geometry.normals, 3 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geometry.colors.length > 0 ) {\r\n\r\n\t\t\t\t\thasVertexColors = true;\r\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( geometry.colors, 3 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( geometry.hasUVIndices === true ) {\r\n\r\n\t\t\t\t\tbuffergeometry.setAttribute( 'uv', new Float32BufferAttribute( geometry.uvs, 2 ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create materials\r\n\r\n\t\t\t\tconst createdMaterials = [];\r\n\r\n\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\r\n\r\n\t\t\t\t\tconst sourceMaterial = materials[ mi ];\r\n\t\t\t\t\tconst materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\r\n\t\t\t\t\tlet material = state.materials[ materialHash ];\r\n\r\n\t\t\t\t\tif ( this.materials !== null ) {\r\n\r\n\t\t\t\t\t\tmaterial = this.materials.create( sourceMaterial.name );\r\n\r\n\t\t\t\t\t\t// mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\r\n\t\t\t\t\t\tif ( isLine && material && ! ( material instanceof LineBasicMaterial ) ) {\r\n\r\n\t\t\t\t\t\t\tconst materialLine = new LineBasicMaterial();\r\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialLine, material );\r\n\t\t\t\t\t\t\tmaterialLine.color.copy( material.color );\r\n\t\t\t\t\t\t\tmaterial = materialLine;\r\n\r\n\t\t\t\t\t\t} else if ( isPoints && material && ! ( material instanceof PointsMaterial ) ) {\r\n\r\n\t\t\t\t\t\t\tconst materialPoints = new PointsMaterial( { size: 10, sizeAttenuation: false } );\r\n\t\t\t\t\t\t\tMaterial.prototype.copy.call( materialPoints, material );\r\n\t\t\t\t\t\t\tmaterialPoints.color.copy( material.color );\r\n\t\t\t\t\t\t\tmaterialPoints.map = material.map;\r\n\t\t\t\t\t\t\tmaterial = materialPoints;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( material === undefined ) {\r\n\r\n\t\t\t\t\t\tif ( isLine ) {\r\n\r\n\t\t\t\t\t\t\tmaterial = new LineBasicMaterial();\r\n\r\n\t\t\t\t\t\t} else if ( isPoints ) {\r\n\r\n\t\t\t\t\t\t\tmaterial = new PointsMaterial( { size: 1, sizeAttenuation: false } );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tmaterial = new MeshPhongMaterial();\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tmaterial.name = sourceMaterial.name;\r\n\t\t\t\t\t\tmaterial.flatShading = sourceMaterial.smooth ? false : true;\r\n\t\t\t\t\t\tmaterial.vertexColors = hasVertexColors;\r\n\r\n\t\t\t\t\t\tstate.materials[ materialHash ] = material;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tcreatedMaterials.push( material );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Create mesh\r\n\r\n\t\t\t\tlet mesh;\r\n\r\n\t\t\t\tif ( createdMaterials.length > 1 ) {\r\n\r\n\t\t\t\t\tfor ( let mi = 0, miLen = materials.length; mi < miLen; mi ++ ) {\r\n\r\n\t\t\t\t\t\tconst sourceMaterial = materials[ mi ];\r\n\t\t\t\t\t\tbuffergeometry.addGroup( sourceMaterial.groupStart, sourceMaterial.groupCount, mi );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( isLine ) {\r\n\r\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials );\r\n\r\n\t\t\t\t\t} else if ( isPoints ) {\r\n\r\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( isLine ) {\r\n\r\n\t\t\t\t\t\tmesh = new LineSegments( buffergeometry, createdMaterials[ 0 ] );\r\n\r\n\t\t\t\t\t} else if ( isPoints ) {\r\n\r\n\t\t\t\t\t\tmesh = new Points( buffergeometry, createdMaterials[ 0 ] );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tmesh = new Mesh( buffergeometry, createdMaterials[ 0 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmesh.name = object.name;\r\n\r\n\t\t\t\tcontainer.add( mesh );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// if there is only the default parser state object with no geometry data, interpret data as point cloud\r\n\r\n\t\t\tif ( state.vertices.length > 0 ) {\r\n\r\n\t\t\t\tconst material = new PointsMaterial( { size: 1, sizeAttenuation: false } );\r\n\r\n\t\t\t\tconst buffergeometry = new BufferGeometry();\r\n\r\n\t\t\t\tbuffergeometry.setAttribute( 'position', new Float32BufferAttribute( state.vertices, 3 ) );\r\n\r\n\t\t\t\tif ( state.colors.length > 0 && state.colors[ 0 ] !== undefined ) {\r\n\r\n\t\t\t\t\tbuffergeometry.setAttribute( 'color', new Float32BufferAttribute( state.colors, 3 ) );\r\n\t\t\t\t\tmaterial.vertexColors = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tconst points = new Points( buffergeometry, material );\r\n\t\t\t\tcontainer.add( points );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn container;\r\n\r\n\t}\r\n\r\n}\r\n\r\nexport { OBJLoader };\r\n"],
  "mappings": "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",
  "names": []
}
